{"tagline":"SimpleRtRest is really simple Rest client for WinRt applications. It use new WinRt HttpClient as a base and gives you ability to consume Restfull services from your Windows 8 application with just few lines of code.","body":"SimpleRtRest\r\n============\r\n\r\nSimpleRtRest is really simple Rest client for WinRt applications. It use new WinRt HttpClient as a base and gives you ability to consume Restfull services from your Windows 8 application with just few lines of code.\r\n\r\nThis project is based on great .NET Rest client [RestSharp](https://github.com/restsharp/RestSharp) and main goal is to have something similar to use in Windows RT applications.\r\n\r\nMore details TBD.\r\n\r\nInitial version only support limited set of features (basic RestFull verb requests and only form url encoded parameters content, JSON deserialization) which are not\r\ntested and documented. Not for production use. This is a only preview of work in progress.\r\n\r\n##### Basic usage\r\n\r\n```csharp\r\n\r\nvar client = new RestClient();\r\nclient.Authenticator = new HttpBasicAuthenticator(username, password);\r\n\r\n// url value which is included in all requests\r\nclient.AddDefaultUrlSegment(\"MyDefaultParam\", someDefaultValue);\r\n\r\nvar request = new RestRequest(HttpMethod.POST);\r\nrequest.Resource = \"resource-url.json\";\r\nrequest.AddParameter(\"MyParam\", someValue);\r\n\r\nvar response = await client.Execute<YourClass>(request);\r\n\r\nvar myObject = response.Data;\r\n\r\n```\r\n","name":"SimpleRtRest","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-36046737-1"}